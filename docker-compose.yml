version: '2'

services:
  web:
    image: nginx:latest
    network_mode: bridge
    ports:
      - ${B_WEB_PORT}:80
    volumes:
      - ./docker/nginx/site.conf:/etc/nginx/conf.d/site.conf
    volumes_from:
      - app
    links:
      - php

  app:
    build:
      context: ./
      dockerfile: docker/dockerfile-composer
    network_mode: bridge
    env_file:
      - .env
    ports:
      - ${B_APP_PORT}:8082
    extra_hosts:
      - api.telegram.org:149.154.167.220
    volumes:
      - ./code:/code
      - ./filechecker:/filechecker
#      - ./docker/php/supervisor/runFile.conf:/etc/supervisor/conf.d/runFile.conf
#      - /etc/timezone:/etc/timezone:ro
#      - /etc/localtime:/etc/localtime:ro
     # - /var/update:/update
    #        depends_on: [db]
    tty: true

  filechecker:
    build:
      context: ./
      dockerfile: docker/dockerfile-filechecker
    network_mode: bridge
    volumes:
      - ./filechecker:/filechecker
    #  - /var/update:/update
    tty: true
    environment:
      - "TZ=Europe/Moscow"
    links:
      - app

  wkhtml:
    build:
      context: ./
      dockerfile: docker/dockerfile-wkhtml
    network_mode: bridge
    ports:
      - ${B_WKHTML_PORT}:8089
    volumes:
      - ./wkhtml:/project/wkhtml
    tty: true

  php:
    build:
      context: docker/php
      dockerfile: Dockerfile
    network_mode: bridge
    depends_on: [app]
    volumes_from:
      - app

  db:
    image: postgres
    network_mode: bridge
    restart: always
    ports:
      - ${B_POSTGRES_PORT}:5432
    volumes:
      - ./db:/data/postgres
      - ./docker/database/initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
    environment:
      - PGDATA=/data/postgres
      - POSTGRES_DB=${B_POSTGRES_NAME}
      - POSTGRES_USER=${B_POSTGRES_USER}
      - POSTGRES_PASSWORD=${B_POSTGRES_PASSWORD}
